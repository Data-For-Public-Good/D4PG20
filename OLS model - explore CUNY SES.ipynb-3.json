{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import statsmodels.api as sm\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Download the .csv from Google Drive and change the file path below."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "ses_data = pd.read_csv(\"WWDdata/StudentExperienceSurvey.csv\")\n",
    "df = pd.DataFrame(ses_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>School</th>\n",
       "      <th>Male</th>\n",
       "      <th>Female</th>\n",
       "      <th>AmericanIndian</th>\n",
       "      <th>AsianPI</th>\n",
       "      <th>Black</th>\n",
       "      <th>Hispanic</th>\n",
       "      <th>White</th>\n",
       "      <th>Under25</th>\n",
       "      <th>Over25</th>\n",
       "      <th>...</th>\n",
       "      <th>TransferCUNYCC</th>\n",
       "      <th>TransferNonCUNYCC</th>\n",
       "      <th>TransferCUNYSenior</th>\n",
       "      <th>TransferNonCUNYSenior</th>\n",
       "      <th>ReasonDegree</th>\n",
       "      <th>ReasonReputation</th>\n",
       "      <th>ReasonCourses</th>\n",
       "      <th>ReasonLocation</th>\n",
       "      <th>ReasonAffordable</th>\n",
       "      <th>ReasonOther</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Baruch</td>\n",
       "      <td>51</td>\n",
       "      <td>49</td>\n",
       "      <td>0</td>\n",
       "      <td>41</td>\n",
       "      <td>12</td>\n",
       "      <td>17</td>\n",
       "      <td>30</td>\n",
       "      <td>75</td>\n",
       "      <td>25</td>\n",
       "      <td>...</td>\n",
       "      <td>45</td>\n",
       "      <td>15</td>\n",
       "      <td>20</td>\n",
       "      <td>19</td>\n",
       "      <td>34</td>\n",
       "      <td>47</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Brooklyn</td>\n",
       "      <td>41</td>\n",
       "      <td>59</td>\n",
       "      <td>0</td>\n",
       "      <td>19</td>\n",
       "      <td>28</td>\n",
       "      <td>16</td>\n",
       "      <td>37</td>\n",
       "      <td>73</td>\n",
       "      <td>27</td>\n",
       "      <td>...</td>\n",
       "      <td>52</td>\n",
       "      <td>7</td>\n",
       "      <td>23</td>\n",
       "      <td>19</td>\n",
       "      <td>42</td>\n",
       "      <td>22</td>\n",
       "      <td>2</td>\n",
       "      <td>16</td>\n",
       "      <td>7</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>City</td>\n",
       "      <td>49</td>\n",
       "      <td>51</td>\n",
       "      <td>0</td>\n",
       "      <td>28</td>\n",
       "      <td>21</td>\n",
       "      <td>33</td>\n",
       "      <td>18</td>\n",
       "      <td>77</td>\n",
       "      <td>23</td>\n",
       "      <td>...</td>\n",
       "      <td>53</td>\n",
       "      <td>10</td>\n",
       "      <td>16</td>\n",
       "      <td>21</td>\n",
       "      <td>48</td>\n",
       "      <td>19</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>10</td>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Hunter</td>\n",
       "      <td>35</td>\n",
       "      <td>65</td>\n",
       "      <td>0</td>\n",
       "      <td>30</td>\n",
       "      <td>13</td>\n",
       "      <td>22</td>\n",
       "      <td>35</td>\n",
       "      <td>78</td>\n",
       "      <td>22</td>\n",
       "      <td>...</td>\n",
       "      <td>45</td>\n",
       "      <td>11</td>\n",
       "      <td>17</td>\n",
       "      <td>27</td>\n",
       "      <td>39</td>\n",
       "      <td>25</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "      <td>14</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>JohnJay</td>\n",
       "      <td>43</td>\n",
       "      <td>57</td>\n",
       "      <td>0</td>\n",
       "      <td>13</td>\n",
       "      <td>20</td>\n",
       "      <td>44</td>\n",
       "      <td>23</td>\n",
       "      <td>79</td>\n",
       "      <td>21</td>\n",
       "      <td>...</td>\n",
       "      <td>46</td>\n",
       "      <td>25</td>\n",
       "      <td>11</td>\n",
       "      <td>18</td>\n",
       "      <td>45</td>\n",
       "      <td>23</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>9</td>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 236 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     School  Male  Female  AmericanIndian  AsianPI  Black  Hispanic  White  \\\n",
       "0    Baruch    51      49               0       41     12        17     30   \n",
       "1  Brooklyn    41      59               0       19     28        16     37   \n",
       "2      City    49      51               0       28     21        33     18   \n",
       "3    Hunter    35      65               0       30     13        22     35   \n",
       "4   JohnJay    43      57               0       13     20        44     23   \n",
       "\n",
       "   Under25  Over25  ...  TransferCUNYCC  TransferNonCUNYCC  \\\n",
       "0       75      25  ...              45                 15   \n",
       "1       73      27  ...              52                  7   \n",
       "2       77      23  ...              53                 10   \n",
       "3       78      22  ...              45                 11   \n",
       "4       79      21  ...              46                 25   \n",
       "\n",
       "   TransferCUNYSenior  TransferNonCUNYSenior  ReasonDegree  ReasonReputation  \\\n",
       "0                  20                     19            34                47   \n",
       "1                  23                     19            42                22   \n",
       "2                  16                     21            48                19   \n",
       "3                  17                     27            39                25   \n",
       "4                  11                     18            45                23   \n",
       "\n",
       "   ReasonCourses  ReasonLocation  ReasonAffordable  ReasonOther  \n",
       "0              1               4                 6            9  \n",
       "1              2              16                 7           12  \n",
       "2              2               8                10           13  \n",
       "3              1              10                14           12  \n",
       "4              1               5                 9           16  \n",
       "\n",
       "[5 rows x 236 columns]"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\"Y\" sets the dependent variable. You can list as many columns as you want to compare as independent variables in X.\n",
    "\n",
    "Some stats basics (as far as I understand it!): in the first seciton, OLS Regression Results, R-squared tells you how much of the variation in Y can be explained by variation in X. In the second section, \"coef\" is a measure of correlation that you read like this: \"For a one unit change in X, we expect a ### change in Y.\" ex: \"For a 1 percent increase in students over 25, we expect a 0.46 percent increase in the number of transfers to CUNY senior colleges.\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                            OLS Regression Results                            \n",
      "==============================================================================\n",
      "Dep. Variable:     TransferCUNYSenior   R-squared:                       0.655\n",
      "Model:                            OLS   Adj. R-squared:                  0.552\n",
      "Method:                 Least Squares   F-statistic:                     6.341\n",
      "Date:                Fri, 27 Mar 2020   Prob (F-statistic):             0.0111\n",
      "Time:                        11:46:25   Log-Likelihood:                -30.284\n",
      "No. Observations:                  14   AIC:                             68.57\n",
      "Df Residuals:                      10   BIC:                             71.12\n",
      "Df Model:                           3                                         \n",
      "Covariance Type:            nonrobust                                         \n",
      "=====================================================================================\n",
      "                        coef    std err          t      P>|t|      [0.025      0.975]\n",
      "-------------------------------------------------------------------------------------\n",
      "const                 0.0086      0.001      7.331      0.000       0.006       0.011\n",
      "Under25               0.4007      0.057      7.003      0.000       0.273       0.528\n",
      "Over25                0.4636      0.068      6.843      0.000       0.313       0.615\n",
      "TransferCUNYCC       -0.3376      0.093     -3.611      0.005      -0.546      -0.129\n",
      "TransferNonCUNYCC    -0.6125      0.175     -3.500      0.006      -1.002      -0.223\n",
      "==============================================================================\n",
      "Omnibus:                        0.700   Durbin-Watson:                   1.920\n",
      "Prob(Omnibus):                  0.705   Jarque-Bera (JB):                0.663\n",
      "Skew:                          -0.417   Prob(JB):                        0.718\n",
      "Kurtosis:                       2.335   Cond. No.                     1.22e+18\n",
      "==============================================================================\n",
      "\n",
      "Warnings:\n",
      "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
      "[2] The smallest eigenvalue is 7.57e-32. This might indicate that there are\n",
      "strong multicollinearity problems or that the design matrix is singular.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "//anaconda3/lib/python3.7/site-packages/numpy/core/fromnumeric.py:2389: FutureWarning: Method .ptp is deprecated and will be removed in a future version. Use numpy.ptp instead.\n",
      "  return ptp(axis=axis, out=out, **kwargs)\n",
      "//anaconda3/lib/python3.7/site-packages/scipy/stats/stats.py:1450: UserWarning: kurtosistest only valid for n>=20 ... continuing anyway, n=14\n",
      "  \"anyway, n=%i\" % int(n))\n"
     ]
    }
   ],
   "source": [
    "Y = df['TransferCUNYSenior']\n",
    "X = df[['Under25', 'Over25', 'TransferCUNYCC', 'TransferNonCUNYCC']]\n",
    "X = sm.add_constant(X)\n",
    "model0 = sm.OLS(Y, X, missing='drop').fit()\n",
    "print(model0.summary())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "x1 = df['TransferCUNYSenior']\n",
    "y1 = df['Over25']\n",
    "plt.plot(x1,y1, 'o', color='black')\n",
    "plt.xlabel(\"Transfer to CUNY Senior College\")\n",
    "plt.ylabel(\"Students over 25\");"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
